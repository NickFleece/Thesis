\babel@toc {english}{}\relax 
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2.1}{\ignorespaces An example of the optical flow field \textbf {(c)}, resultant from the first and second frames \textbf {(a)} \textbf {(b)}. The goal being that the background is not in the optical flow field, only the movement of subjects in the frames are considered. This particular example is utilizing the TV-L optical flow \blx@tocontentsinit {0}\cite {TV-L}.\relax }}{7}{figure.caption.20}%
\contentsline {figure}{\numberline {2.2}{\ignorespaces \relax }}{8}{figure.caption.23}%
\contentsline {figure}{\numberline {2.3}{\ignorespaces Example of kernel function as shown in Review of Deep Learning: Concepts, CNN architectures, challenges, applications, future directions \blx@tocontentsinit {0}\cite {2021cnnreview}.\relax }}{9}{figure.caption.24}%
\contentsline {figure}{\numberline {2.4}{\ignorespaces An example structure of a simple CNN-LSTM based model, each individual frame being individually fed into the CNN, and then passed to a LSTM.\relax }}{10}{figure.caption.29}%
\contentsline {figure}{\numberline {2.5}{\ignorespaces Action recognition structure for the LRCN model. \blx@tocontentsinit {0}\cite {LRCNS}\relax }}{11}{figure.caption.30}%
\contentsline {figure}{\numberline {2.6}{\ignorespaces Overview of the Beyond Short Snippets: Deep Networks for Video Classification model \blx@tocontentsinit {0}\cite {beyondshortsnippets}\relax }}{12}{figure.caption.31}%
\contentsline {figure}{\numberline {2.7}{\ignorespaces Deep LSTM architecture utilized by \blx@tocontentsinit {0}\cite {beyondshortsnippets} in the feature aggregation step as shown in figure \ref {fig:beyondoverview}.\relax }}{13}{figure.caption.32}%
\contentsline {figure}{\numberline {2.8}{\ignorespaces The original 3D-CNN action recognition model architecture proposed by \blx@tocontentsinit {0}\cite {3DCNN-ActionRecognition}, containing 3 convolutional layers, two subsampling layers, and one fully connected layer\relax }}{14}{figure.caption.34}%
\contentsline {figure}{\numberline {2.9}{\ignorespaces The model architecture used in the I3D paper \blx@tocontentsinit {0}\cite {i3d}, where the Inflated Inception-V1 architecture (left) and it's detailed submodule (right) are shown.\relax }}{14}{figure.caption.35}%
\contentsline {figure}{\numberline {2.10}{\ignorespaces The original transformer model proposed in \blx@tocontentsinit {0}\cite {transformer_og}, the image is split into fixed-size patches, linearly embed them, and add positional embeddings. It is then fed into a standard Transformer Encoder architecture.\relax }}{15}{figure.caption.37}%
\contentsline {figure}{\numberline {2.11}{\ignorespaces Example feature outputs of how a transformer utilizes attention to focus on the main subject of a video in order to greater identify actions as shown in \blx@tocontentsinit {0}\cite {transformer_og}\relax }}{16}{figure.caption.38}%
\contentsline {figure}{\numberline {2.12}{\ignorespaces Example classes from the Kinetics dataset \blx@tocontentsinit {0}\cite {kinetics} which demonstrate the different singular person, person-person, and person-object interactions characterized in the dataset.\relax }}{17}{figure.caption.40}%
\contentsline {figure}{\numberline {2.13}{\ignorespaces \textbf {Left:} JHMDB Annotated pose, each dot denoting a joint. \textbf {Right:} Simplified representation of this pose that will be used later in this thesis. Notably the foot joints are missing as they are not reliably labelled and are not used by the model. The indexes correspond to JHMDB joint indexes as if the subject were facing the camera.\relax }}{18}{figure.caption.41}%
\contentsline {figure}{\numberline {2.14}{\ignorespaces Demonstrating the effectiveness of the OpenPose \blx@tocontentsinit {0}\cite {openpose} model. The \textbf {top} image showing that it is capable of distinguishing individual people, the \textbf {bottom left} showing the Part Affinity Fields corresponding to the limb connecting the right elbow and wrist. The \textbf {bottom right} shows a zoomed in view of these Part Affinity Fields.\relax }}{19}{figure.caption.43}%
\contentsline {figure}{\numberline {2.15}{\ignorespaces The overall framework of the action recognition model used by \textit {An approach to pose-based action recognition} \blx@tocontentsinit {0}\cite {WangPose}. \textbf {(a)} \& \textbf {(b)} show the esimated poses which are then used to create the dictionary of part poses. The temporal and spacial part sets in \textbf {(c)} are then represented in the histograms shown in \textbf {(d)}.\relax }}{20}{figure.caption.45}%
\contentsline {figure}{\numberline {2.16}{\ignorespaces Illustration of P-CNN feature construction. RGB \& Optical Flow "Patches" are extracted around each joint, and sometimes containing multiple joints. These features are then passed through their respective CNN's, Aggregation, \& Normalization and then concatenated to form the final P-CNN feature.\relax }}{20}{figure.caption.46}%
\contentsline {figure}{\numberline {2.17}{\ignorespaces A typical fused architecture. Each of the Pose, Optical Flow, and RGB Frames are passed through individual 3D-CNN's, the outputs are then concatenated to achieve a final output.\relax }}{21}{figure.caption.47}%
\contentsline {figure}{\numberline {2.18}{\ignorespaces The chained architecture as shown in Chained Multi-stream Netowrks \blx@tocontentsinit {0}\cite {Chained}. The model differentiates in that it has separate loss functions for each of Pose, Optical Flow, and RGB, which are chained together in a way that they can be individually optimized.\relax }}{21}{figure.caption.48}%
\contentsline {figure}{\numberline {2.19}{\ignorespaces The illustration of the PoTion representation \blx@tocontentsinit {0}\cite {potion}. The input joint heatmaps are colored based on their time in the frame, and the frames are then concatenated to form the final movement of the joint throughout the video.\relax }}{22}{figure.caption.50}%
\contentsline {figure}{\numberline {2.20}{\ignorespaces The colourization method utilized by the PoTion model \blx@tocontentsinit {0}\cite {potion}. As the frame index moves throughout the video, the colour of the joint shifts from one to another. This can be done for any amount of colours, denoted by C, the figure shows examples for C=2 and C=3, but the same logic holds for more than 3.\relax }}{23}{figure.caption.51}%
\contentsline {figure}{\numberline {2.21}{\ignorespaces The main PA3D \blx@tocontentsinit {0}\cite {PA3D} model architecture, demonstrating the 1x1 convolutions used in order to construct the temporal cube.\relax }}{24}{figure.caption.52}%
\contentsline {figure}{\numberline {2.22}{\ignorespaces The EHPI representation used in the Simple yet efficient paper \blx@tocontentsinit {0}\cite {simple_yet_efficient}. The x, y coordinates of each joint are mapped to the red \& green values of a pixel, all joints are then stacked to form a column of joint positions in a frame. Each frame is then placed next to each other to form the 2D representation.\relax }}{25}{figure.caption.53}%
\contentsline {figure}{\numberline {2.23}{\ignorespaces The representation used by the Smaller, Faster, Better model \blx@tocontentsinit {0}\cite {smaller_faster_better}, this is split into two representations. The cartesian coordinates of each joint are encoded into a 2d representation, not dissimilar to previously discussed models \blx@tocontentsinit {0}\cite {simple_yet_efficient}. The JCD feature is a similar representation, but instead of x, y, and z coordinates, uses the distance between two joints.\relax }}{26}{figure.caption.54}%
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3.1}{\ignorespaces Example of how joints are connected through bones in pose representations.\relax }}{27}{figure.caption.57}%
\contentsline {figure}{\numberline {3.2}{\ignorespaces Two examples of three joints interconnected with two bones, and how the angle can change from one frame to another.\relax }}{28}{figure.caption.59}%
\contentsline {figure}{\numberline {3.3}{\ignorespaces An example skeleton with JHMDB indices in each of the joints. In addition, angles have been shown as if they are being calculated in a clockwise direction, resulting in connections such as 5-4-8 having the angle on the "outside" of the person.\relax }}{29}{figure.caption.63}%
\contentsline {figure}{\numberline {3.4}{\ignorespaces Example of how the intermediate representation is constructed. At each frame, the angles of each joint are taken and added to a column, each column is then stacked next to one another to form a 2 dimensional image.\relax }}{30}{figure.caption.66}%
\contentsline {figure}{\numberline {3.5}{\ignorespaces The finished intermediate representation, the top half contains the changes in joint angle from one frame to another (also referred to as "velocity"), and the bottom half contains the joint angles themselves. This is referred to as the "stacked" representation.\relax }}{31}{figure.caption.67}%
\contentsline {figure}{\numberline {3.6}{\ignorespaces Two examples of temporal adjustment to the stacked representation. In both cases, the representation skips N frames in each step, meaning with a N value of 1 the representation will ignore every other frame, etc.\relax }}{32}{figure.caption.70}%
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {N=1}}}{32}{figure.caption.70}%
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {N=2}}}{32}{figure.caption.70}%
\contentsline {figure}{\numberline {3.7}{\ignorespaces The basic model architecture used, very similar to that used in other models such as Potion \blx@tocontentsinit {0}\cite {potion}, it is a simple 2 dimensional CNN that contains one fully connected layer at the end for classification.\relax }}{33}{figure.caption.74}%
\addvspace {10\p@ }
\contentsline {figure}{\numberline {4.1}{\ignorespaces Detailed F1 score results on the JHMDB dataset, averaged over the 3 testing splits. Black bars show the corresponding maximum \& minimum values attained in one of the splits.\relax }}{35}{figure.caption.81}%
\contentsline {figure}{\numberline {4.2}{\ignorespaces Three examples of the $Jump$ class from the JHMDB dataset. The frames selected were four frames roughly evenly spaced out through the video.\relax }}{36}{figure.caption.82}%
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {}}}{36}{figure.caption.82}%
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {}}}{36}{figure.caption.82}%
\contentsline {subfigure}{\numberline {(c)}{\ignorespaces {}}}{36}{figure.caption.82}%
\contentsline {figure}{\numberline {4.3}{\ignorespaces Three examples of the $Golf$ class from the JHMDB dataset. The frames selected were four frames roughly evenly spaced out through the video.\relax }}{37}{figure.caption.86}%
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {}}}{37}{figure.caption.86}%
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {}}}{37}{figure.caption.86}%
\contentsline {subfigure}{\numberline {(c)}{\ignorespaces {}}}{37}{figure.caption.86}%
\contentsline {figure}{\numberline {4.4}{\ignorespaces Detailed precision \& recall results on the JHMDB dataset, averaged over the 3 testing splits. Black bars show the corresponding maximum \& minimum values attained in one of the splits.\relax }}{41}{figure.caption.90}%
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {Precision}}}{41}{figure.caption.90}%
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {Recall}}}{41}{figure.caption.90}%
\contentsline {figure}{\numberline {4.5}{\ignorespaces Detailed F1 score results on the JHMDB dataset using only the angle velocities from one frame to another.\relax }}{42}{figure.caption.95}%
\contentsline {figure}{\numberline {4.6}{\ignorespaces Alternative intermediate representation format where rows alternate between angles and velocities rather than one and then the other.\relax }}{42}{figure.caption.97}%
\contentsline {figure}{\numberline {4.7}{\ignorespaces The split model architecture inspired by fusion models where the two different pose features are split and utilize their own CNN's.\relax }}{43}{figure.caption.99}%
\addvspace {10\p@ }
